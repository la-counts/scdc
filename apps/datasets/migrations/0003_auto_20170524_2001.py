# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-05-25 03:01
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('focus', '0001_initial'),
        ('datasets', '0002_catalogrecord_dataportal_dataset_distribution_publisher_recordcolumn_spatialentity'),
    ]

    operations = [
        migrations.AddField(
            model_name='recordcolumn',
            name='concept',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='focus.Concept'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='dataset',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distributions', to='datasets.Dataset'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='catalog_record',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.CatalogRecord'),
        ),
        migrations.AddField(
            model_name='dataportal',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='datasets.Publisher'),
        ),
        migrations.AddField(
            model_name='dataportal',
            name='spatial_entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.SpatialEntity'),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='approved_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='approved_catalog_records', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='concepts',
            field=models.ManyToManyField(blank=True, help_text='The main category of the dataset. A dataset can have multiple themes.', to='focus.Concept'),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='publisher',
            field=models.ForeignKey(help_text='An entity responsible for making the dataset available (may not be responsible for collecting the data).', on_delete=django.db.models.deletion.CASCADE, to='datasets.Publisher'),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='spatial_entity',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='datasets.SpatialEntity'),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='submitted_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='submitted_catalog_records', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='catalogrecord',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='User tags'),
        ),
        migrations.AlterUniqueTogether(
            name='recordcolumn',
            unique_together=set([('catalog_record', 'field_name')]),
        ),
        migrations.AlterOrderWithRespectTo(
            name='recordcolumn',
            order_with_respect_to='catalog_record',
        ),
    ]
